from django.core.management.base import BaseCommand
from telethon import TelegramClient
from myapp.telegram.models import TelegramChannel
from dotenv import load_dotenv
from PIL import Image
import os
from asgiref.sync import sync_to_async
import asyncio

load_dotenv()
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")

class Command(BaseCommand):
    help = '–û–±–Ω–æ–≤–ª—è–µ—Ç –∞–≤–∞—Ç–∞—Ä—ã –∫–∞–Ω–∞–ª–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ –º–æ–¥–µ–ª—å TelegramChannel'

    def handle(self, *args, **options):
        print("üëã –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞")
        asyncio.run(self.run())

    async def run(self):
        print("üöÄ –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ Telegram...")
        client = TelegramClient('session_name', api_id, api_hash)
        await client.connect()

        if not await client.is_user_authorized():
            print("‚ùó Telegram –∫–ª–∏–µ–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.")
            print("üîê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏ —Ä—É—á–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Telethon CLI).")
            await client.disconnect()
            return

        channels = await sync_to_async(list)(TelegramChannel.objects.all())
        for channel in channels:
            print(f'üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–Ω–∞–ª–∞: {channel.title} ({channel.url})')
            try:
                entity = await client.get_entity(channel.url)
                photo_path = await client.download_profile_photo(entity)

                if photo_path:
                    print(f'üì∑ –§–æ—Ç–æ —Å–∫–∞—á–∞–Ω–æ: {photo_path}')
                    filename = f"channel_{entity.id}.jpg"
                    save_path = os.path.join('myapp', 'static', 'media', 'avatars', filename)
                    os.makedirs(os.path.dirname(save_path), exist_ok=True)

                    img = Image.open(photo_path)
                    img = img.resize((50, 50), Image.LANCZOS)
                    img.save(save_path, 'JPEG', quality=85)

                    channel.avatar = f"media/avatars/{filename}"  # –ø—É—Ç—å –æ—Ç STATIC_URL
                    await sync_to_async(channel.save)()

                    print(f'‚úÖ –ê–≤–∞—Ç–∞—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}')
                else:
                    print(f'‚ö† –ù–µ—Ç —Ñ–æ—Ç–æ —É: {channel.title}')

            except Exception as e:
                print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {channel.url}: {e}')

        await client.disconnect()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ.")
